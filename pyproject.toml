[project]
name = "rag-backend"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "azure-search-documents>=11.4.0",
    "azure-identity>=1.0.0",
    "openai>=1.0.0",
    "python-dotenv>=1.0.0",
    "aiohttp>=3.9.0",
]

[tool.mypy]
strict = true
python_version = "3.12"
warn_return_any = false
warn_unused_ignores = false
plugins = ["pydantic.mypy"]
exclude = [
    "tests/",
]

[[tool.mypy.overrides]]
module = [
    "pydantic",
    "pydantic.*",
    "azure.*",
    "openai.*",
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
]
ignore = []
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
known-first-party = ["rag_backend"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-stub>=1.1.0",
    "pytest-asyncio>=0.21.0",
    "mypy>=1.0.0",
    "types-requests",
]
